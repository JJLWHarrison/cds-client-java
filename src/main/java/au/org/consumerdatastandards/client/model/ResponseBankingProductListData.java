/*
* Consumer Data Standards
* Sample Data Holder to Demonstrate the Consumer Data Right APIs
*
* NOTE: This class is auto generated by the cds-codegen package
* https://github.com/ConsumerDataStandardsAustralia/cds-codegen
* Do not edit the class manually.
*/
package au.org.consumerdatastandards.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;
import java.net.URI;
import java.lang.reflect.Field;
import java.util.List;
import java.math.BigDecimal;

/**
* ResponseBankingProductListData
*/
public class ResponseBankingProductListData  {
            // The list of products returned.  If the filter results in an
    // empty set then this array may have no records
        @SerializedName("products")
    private List<BankingProduct> products;

        
    @ApiModelProperty(value = "The list of products returned.  If the filter results in an empty set then this array may have no records", required = true)
    public List<BankingProduct> getProducts() {
        return products;
    }

    public void setProducts(List<BankingProduct> products) {
        this.products = products;
    }
    
    public ResponseBankingProductListData products(List<BankingProduct> products) {
        this.products = products;
        return this;
    }
    

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        
                ResponseBankingProductListData inputModel = (ResponseBankingProductListData) o;
        if(! (products.equals(inputModel.getProducts()))) { return false; }
        return true;
    }

    @Override
    public int hashCode() {
      return Objects.hash(products);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(String.format("class %s {\n", getClass()));        
                        sb.append("    products: ").append(toIndentedString(products)).append("\n");
                sb.append("}");
        return sb.toString();
    }
    
    private String toIndentedString(java.lang.Object o) {
      if (o == null) {
        return "null";
      }
      return o.toString().replace("\n", "\n    ");
    }
}

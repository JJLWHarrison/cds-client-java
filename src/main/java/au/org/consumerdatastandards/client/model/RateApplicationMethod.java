/*
 * Consumer Data Standards
 * Sample Data Holder to Demonstrate the Consumer Data Right APIs
 *
 * NOTE: This class is auto generated by the cds-codegen package
 * https://github.com/ConsumerDataStandardsAustralia/cds-codegen
 * Do not edit the class manually.
 */
package au.org.consumerdatastandards.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;

/**
* RateApplicationMethod
* 
* * The method used to calculate the amount to be applied using
* one or more tiers. A single rate may be applied to the
* entire balance or each applicable tier rate is applied to
* the portion of the balance that falls into that tier
* (referred to as 'bands' or 'steps')
* */
@JsonAdapter(RateApplicationMethod.Adapter.class)
public enum RateApplicationMethod {
        WHOLE_BALANCE("WHOLE_BALANCE"),        PER_TIER("PER_TIER");    
    private String value;
    
    RateApplicationMethod(String value) {
      this.value = value;
    }
    
    @Override
    public String toString() {
      return String.valueOf(value);
    }
    
    public String getValue() {
        return value;
    }

    public static RateApplicationMethod fromValue(String value) {
      for (RateApplicationMethod b : RateApplicationMethod.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
    
    public static class Adapter extends TypeAdapter<RateApplicationMethod> {
        @Override
        public void write(final JsonWriter jsonWriter, final RateApplicationMethod enumeration) throws IOException {
          jsonWriter.value(enumeration.getValue());
        }
        
        @Override
        public RateApplicationMethod read(final JsonReader jsonReader) throws IOException {
          String value = jsonReader.nextString();
          return RateApplicationMethod.fromValue(value);
        }
    }
}

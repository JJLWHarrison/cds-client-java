/*
* Consumer Data Standards
* Sample Data Holder to Demonstrate the Consumer Data Right APIs
*
* NOTE: This class is auto generated by the cds-codegen package
* https://github.com/ConsumerDataStandardsAustralia/cds-codegen
* Do not edit the class manually.
*/
package au.org.consumerdatastandards.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;

/**
* LendingRateType
* 
* * The type of rate (fixed, variable, etc). See the next
* section for an overview of valid values and their meaning
* */
@JsonAdapter(LendingRateType.Adapter.class)
public enum LendingRateType {
        FIXED("FIXED"),        VARIABLE("VARIABLE"),        INTRODUCTORY("INTRODUCTORY"),        DISCOUNT("DISCOUNT"),        PENALTY("PENALTY"),        FLOATING("FLOATING"),        MARKET_LINKED("MARKET_LINKED"),        CASH_ADVANCE("CASH_ADVANCE"),        PURCHASE("PURCHASE"),        BUNDLE_DISCOUNT_FIXED("BUNDLE_DISCOUNT_FIXED"),        BUNDLE_DISCOUNT_VARIABLE("BUNDLE_DISCOUNT_VARIABLE");    
    private String value;
    
    LendingRateType(String value) {
      this.value = value;
    }
    
    @Override
    public String toString() {
      return String.valueOf(value);
    }
    
    public String getValue() {
        return value;
    }

    public static LendingRateType fromValue(String value) {
      for (LendingRateType b : LendingRateType.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
    
    public static class Adapter extends TypeAdapter<LendingRateType> {
        @Override
        public void write(final JsonWriter jsonWriter, final LendingRateType enumeration) throws IOException {
          jsonWriter.value(enumeration.getValue());
        }
        
        @Override
        public LendingRateType read(final JsonReader jsonReader) throws IOException {
          String value = jsonReader.nextString();
          return LendingRateType.fromValue(value);
        }
    }
}

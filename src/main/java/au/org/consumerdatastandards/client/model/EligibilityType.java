/*
 * Consumer Data Standards
 * Sample Data Holder to Demonstrate the Consumer Data Right APIs
 *
 * NOTE: This class is auto generated by the cds-codegen package
 * https://github.com/ConsumerDataStandardsAustralia/cds-codegen
 * Do not edit the class manually.
 */
package au.org.consumerdatastandards.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;

/**
* EligibilityType
* 
* * The type of eligibility criteria described.  See the next
* section for an overview of valid values and their meaning
* */
@JsonAdapter(EligibilityType.Adapter.class)
public enum EligibilityType {
        BUSINESS("BUSINESS"),        PENSION_RECIPIENT("PENSION_RECIPIENT"),        MIN_AGE("MIN_AGE"),        MAX_AGE("MAX_AGE"),        MIN_INCOME("MIN_INCOME"),        MIN_TURNOVER("MIN_TURNOVER"),        STAFF("STAFF"),        STUDENT("STUDENT"),        EMPLOYMENT_STATUS("EMPLOYMENT_STATUS"),        RESIDENCY_STATUS("RESIDENCY_STATUS"),        NATURAL_PERSON("NATURAL_PERSON"),        OTHER("OTHER");    
    private String value;
    
    EligibilityType(String value) {
      this.value = value;
    }
    
    @Override
    public String toString() {
      return String.valueOf(value);
    }
    
    public String getValue() {
        return value;
    }

    public static EligibilityType fromValue(String value) {
      for (EligibilityType b : EligibilityType.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
    
    public static class Adapter extends TypeAdapter<EligibilityType> {
        @Override
        public void write(final JsonWriter jsonWriter, final EligibilityType enumeration) throws IOException {
          jsonWriter.value(enumeration.getValue());
        }
        
        @Override
        public EligibilityType read(final JsonReader jsonReader) throws IOException {
          String value = jsonReader.nextString();
          return EligibilityType.fromValue(value);
        }
    }
}

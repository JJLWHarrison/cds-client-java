/*
* Consumer Data Standards
* Sample Data Holder to Demonstrate the Consumer Data Right APIs
*
* NOTE: This class is auto generated by the cds-codegen package
* https://github.com/ConsumerDataStandardsAustralia/cds-codegen
* Do not edit the class manually.
*/
package au.org.consumerdatastandards.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;

/**
* InterestPaymentDue
* 
* * When loan payments are due to be paid within each period.
* The investment benefit of earlier payments affect the rate
* that can be offered
* */
@JsonAdapter(InterestPaymentDue.Adapter.class)
public enum InterestPaymentDue {
        ARREARS("ARREARS"),        ADVANCE("ADVANCE");    
    private String value;
    
    InterestPaymentDue(String value) {
      this.value = value;
    }
    
    @Override
    public String toString() {
      return String.valueOf(value);
    }
    
    public String getValue() {
        return value;
    }

    public static InterestPaymentDue fromValue(String value) {
      for (InterestPaymentDue b : InterestPaymentDue.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
    
    public static class Adapter extends TypeAdapter<InterestPaymentDue> {
        @Override
        public void write(final JsonWriter jsonWriter, final InterestPaymentDue enumeration) throws IOException {
          jsonWriter.value(enumeration.getValue());
        }
        
        @Override
        public InterestPaymentDue read(final JsonReader jsonReader) throws IOException {
          String value = jsonReader.nextString();
          return InterestPaymentDue.fromValue(value);
        }
    }
}
